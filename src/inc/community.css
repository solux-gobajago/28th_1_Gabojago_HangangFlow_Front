/* community.css */

/* Existing styles */

/* Add responsive styles for smaller screens */
@media (max-width: 768px) {
  .c-main-container {
    grid-template-rows: auto auto; /* Adjust grid template rows for smaller screens */
    grid-template-columns: 1fr; /* Adjust grid template columns for smaller screens */
  }

  .c-side-bar {
    display: none;
  }

  .c-content-container {
    margin: 0 auto; /* Center the content container horizontally */
    width: 10%; /* Adjust the width as needed */
    padding: 10px;
  }
}

/* Other existing styles */




body {
  margin: 0;
  padding: 0;

}

.c-main-container {
  display: grid;
  grid-template-rows: 150px 1fr; /* 변경된 높이 (첫 번째 행: 150px, 두 번째 행: 나머지) */
  grid-template-columns: 250px 1fr;
  height: 100vh; /* 높이를 150vh로 설정 */
  
}

.c-navigator {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 60px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  margin: 0; /* Remove any margins */
  /*background-color: #f0f0f0;*/
  background-color: rgba(16, 58, 106, 0.614);
  z-index: 1;
}

.c-nav {
  margin-left: auto;
}

.c-content-container {
grid-row: 2 / 3;
grid-column: 4 / 5;
overflow-y: auto;
padding-top: 20px;
background-color: rgba(255, 255, 255, 0.7);
margin-right: 210px;
border-radius: 20px;
width: 1000px;
height: 500px; /* Adjust the height automatically based on the content */
}

.c-content-container::-webkit-scrollbar{
display: none;
}



/* Add the rest of the styles if needed */

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Variable overrides */
:root {
  --primary: #900;
  --enable-shadows: true;
  --prefix: "mo-";
}

/* 노멀라이즈 시작 */
ul, li {
  margin: 0;
  padding: 0;
  list-style: none;   	    /* 해당 태그의 list-style을 none으로 하는 것으로 ●을 제거한다 */
}

a {
  color: inherit;   	    /* 부모 엘리먼트의 값을 물려받는다 */
  text-decoration: none;    /* 해당 태그의 text-decoration 속성을 none 값으로 하는 것으로 밑줄을 제거한다 */
}
/* 노멀라이즈 끝 */



/* 사이드바의 너비와 높이를 변수를 통해 통제 */
:root {
  --side-bar-width: 200px;
  --side-bar-height: 40vh;
}

.c-sidebar {
  position: fixed;
  top: 60px;
  left: 0;
  background-color: beige;
  width: 250px;
  height: calc(100vh - 60px);
  padding: 20px;
  margin: 0; /* Remove any margins */
  border: none; /* Remove any borders */
  z-index: 2;
}
.c-side-bar {
  position: fixed;
  top: 60px;
  left: 0;
  background-color: rgba(16, 58, 106, 0.614);
  width: 250px;
  height: calc(100vh - 60px);
  /* padding: 20px; */
  margin: 0 auto; /* Remove any margins */
  border: none; /* Remove any borders */
  z-index: 2;
  /*position: fixed;    /* 스크롤을 따라오도록 지정 */
  /*position: fixed;
  top: 60px;
  left: 0;
  background-color: rgb(158, 158, 158);
  width: var(--side-bar-width);
  min-height: var(--side-bar-height);   /* 사이드바의 높이를 전체 화면 높이의 90%로 지정 
  margin-top: calc((100vh - var(--side-bar-height))/300 );    /* 사이드바 위와 아래의 마진을 동일하게 지정 */
}

.c-side-bar ul{
  width: 250px;
  padding-top: 30px;
  padding-bottom: 30px;
}
.c-side-bar li{
  width: 250px;
}

/* 모든 메뉴의 a에 속성값 부여 */
.c-side-bar ul > li > a {
  display: block;
  color: white;
  font-size: 1.15rem;
  font-weight: bold;
  padding-top: 20px;
  padding-bottom: 20px;
  text-decoration: none;
}
/* 자식의 position이 absolute일 때 자식을 영역 안에 가두어 준다 */
.c-side-bar > ul > li {
  position: relative;
}
/* 모든 메뉴가 마우스 인식 시 반응 */
.c-side-bar ul > li> a:hover {
  background-color: #2473bd;
  border-bottom: 1px solid #2473bd;


}
.c-side-bar ul{
  padding-left: 0;
  text-align: center;
  
}
/* 사이드바 너비의 80%만큼 왼쪽으로 이동 */
.c-side-bar {
  /* border-radius: 20px; */
  transform: translate(calc(var(--side-bar-width) * -0.8), 0);  /* X축 이동, Y축 고정 */
  transition: .5s;
  overflow-y: auto;
}

.c-side-bar::-webkit-scrollbar{
  display: none;
}

/* 마우스 인식 시 원래의 위치로 이동 */
.c-side-bar:hover {
  transform: translate(-20px, 0);   /* 둥근 모서리의 너비만큼 X축 이동, Y축 고정 */
}

/* GrayCircle.css */
.GrayCircleWrapper {
  display: flex;
  align-items: center;


}
  :root {
      /* Define a CSS variable for the circle radius */
      --circle-radius: 30%;
  }

.GrayCircle {
  /*width: var(--circle-radius); /* Use the CSS variable for the width and height 
  height: var(--circle-radius);*/
  width : 50px;
  height : 50px;
  background-color: rgb(131, 131, 134);
  border-radius: 50%;
  margin-left: 40px; 
  margin-right: 20px;
}

.GrayBox {
  height: 100px;
  width: 780px;
  background-color: gray;
  margin: 10px; /* Add padding to create space inside the GrayBox */
}

.GrayBox button {
  margin-right: 10px;
}

.heartbutton{
  margin-top: 22px;
}
/*
@media (max-width: 768px) {
  /* For screen sizes up to 768px, set the GrayBox width to 50% of the container 
  .GrayBox {
    width: 200%;
  }
}

@media (min-width: 769px) {
  /* For screen sizes larger than 768px, set the GrayBox width to 100px 
  .GrayBox {
    width: 85%
  }
}*/
table {
  border-collapse: collapse; 

  margin: 0 auto
}

tr {
  border-bottom: 10px solid black;
}
td {
  border-bottom: 10px solid black;
}
